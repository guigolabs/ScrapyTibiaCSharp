// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using TibiaApi.Database.Sql;

namespace TibiaApi.Database.Migrations
{
    [DbContext(typeof(TibiaDbContext))]
    partial class TibiaDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn)
                .HasAnnotation("ProductVersion", "3.1.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            modelBuilder.Entity("TibiaApi.Database.DeathPlayer", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasColumnType("bigint")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("DescriptionDeath")
                        .HasColumnName("description_death")
                        .HasColumnType("character varying(1000)")
                        .HasMaxLength(1000);

                    b.Property<DateTime>("EventDate")
                        .HasColumnName("event_date")
                        .HasColumnType("timestamp without time zone");

                    b.Property<long>("PlayerId")
                        .HasColumnName("player_id")
                        .HasColumnType("bigint");

                    b.Property<string>("PlayersMurder")
                        .HasColumnName("player_murder")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("PlayerId");

                    b.ToTable("death_player");
                });

            modelBuilder.Entity("TibiaApi.Database.KillStat", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasColumnType("bigint")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<long>("IdWorld")
                        .HasColumnName("id_world")
                        .HasColumnType("bigint");

                    b.Property<int>("KilledByPlayer")
                        .HasColumnName("killed_by_player")
                        .HasColumnType("integer");

                    b.Property<int>("KilledPlayer")
                        .HasColumnName("killed_player")
                        .HasColumnType("integer");

                    b.Property<long>("MonsterKillStatId")
                        .HasColumnName("monster_kill_stats_id")
                        .HasColumnType("bigint");

                    b.Property<string>("Race")
                        .HasColumnName("race")
                        .HasColumnType("text");

                    b.Property<DateTime>("RegisterDate")
                        .HasColumnName("register_date")
                        .HasColumnType("timestamp without time zone");

                    b.Property<long?>("WorldId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("MonsterKillStatId");

                    b.HasIndex("WorldId");

                    b.ToTable("kill_stat");
                });

            modelBuilder.Entity("TibiaApi.Database.MonsterKillStats", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasColumnType("bigint")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<long>("IdWorld")
                        .HasColumnName("id_world")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("RegisterDate")
                        .HasColumnName("register_date")
                        .HasColumnType("timestamp without time zone");

                    b.Property<long?>("WorldId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("WorldId");

                    b.ToTable("monster_kill_stats");
                });

            modelBuilder.Entity("TibiaApi.Database.Player", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasColumnType("bigint")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("AccountStatus")
                        .HasColumnName("account_status")
                        .HasColumnType("text");

                    b.Property<int>("AchievementPoints")
                        .HasColumnName("achievement_points")
                        .HasColumnType("integer");

                    b.Property<DateTime>("CreationDate")
                        .HasColumnName("creation_date")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("GuildName")
                        .HasColumnName("guild_name")
                        .HasColumnType("text");

                    b.Property<string>("House")
                        .HasColumnName("house")
                        .HasColumnType("text");

                    b.Property<long>("IdWorld")
                        .HasColumnName("id_world")
                        .HasColumnType("bigint");

                    b.Property<string>("InfoAccount")
                        .HasColumnName("info_account")
                        .HasColumnType("text");

                    b.Property<string>("LastLogin")
                        .IsRequired()
                        .HasColumnName("last_login")
                        .HasColumnType("text");

                    b.Property<DateTime>("LastScrapyDate")
                        .HasColumnName("last_scrapy_date")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int>("Level")
                        .HasColumnName("level")
                        .HasColumnType("integer");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnName("name")
                        .HasColumnType("text");

                    b.Property<string>("OlderNames")
                        .HasColumnName("older_names")
                        .HasColumnType("text");

                    b.Property<string>("ResidenceCity")
                        .IsRequired()
                        .HasColumnName("residence_player")
                        .HasColumnType("text");

                    b.Property<int>("Sex")
                        .HasColumnName("sex")
                        .HasColumnType("integer");

                    b.Property<long?>("WorldId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("WorldId");

                    b.ToTable("player");
                });

            modelBuilder.Entity("TibiaApi.Database.PlayerHistory", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasColumnType("bigint")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("AccountStatus")
                        .HasColumnName("account_status")
                        .HasColumnType("text");

                    b.Property<int>("AchievementPoints")
                        .HasColumnName("achiement_points")
                        .HasColumnType("integer");

                    b.Property<DateTime>("CreationDate")
                        .HasColumnName("creation_date")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("GuildName")
                        .HasColumnName("guild_name")
                        .HasColumnType("text");

                    b.Property<string>("House")
                        .HasColumnName("house")
                        .HasColumnType("text");

                    b.Property<long>("IdWorld")
                        .HasColumnName("id_world")
                        .HasColumnType("bigint");

                    b.Property<string>("InfoAccount")
                        .HasColumnName("info_account")
                        .HasColumnType("text");

                    b.Property<string>("LastLogin")
                        .HasColumnName("last_login")
                        .HasColumnType("text");

                    b.Property<DateTime>("LastScrapyDate")
                        .HasColumnName("last_scrapy_date")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int>("Level")
                        .HasColumnName("level")
                        .HasColumnType("integer");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnName("name")
                        .HasColumnType("text");

                    b.Property<string>("OlderNames")
                        .HasColumnName("older_names")
                        .HasColumnType("text");

                    b.Property<long>("PlayerId")
                        .HasColumnName("player_id")
                        .HasColumnType("bigint");

                    b.Property<string>("ResidenceCity")
                        .IsRequired()
                        .HasColumnName("residence_city")
                        .HasColumnType("text");

                    b.Property<int>("Sex")
                        .HasColumnName("sex")
                        .HasColumnType("integer");

                    b.Property<long?>("WorldId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("PlayerId");

                    b.HasIndex("WorldId");

                    b.ToTable("player_history");
                });

            modelBuilder.Entity("TibiaApi.Database.Stats", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasColumnType("bigint")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<DateTime>("RegisterDate")
                        .HasColumnName("register_date")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int>("Status")
                        .HasColumnName("status")
                        .HasColumnType("integer");

                    b.Property<int>("TotalPlayerOnline")
                        .HasColumnName("total_player_online")
                        .HasColumnType("integer");

                    b.Property<long>("WorldId")
                        .HasColumnName("world_id")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("WorldId");

                    b.ToTable("stats");
                });

            modelBuilder.Entity("TibiaApi.Database.World", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasColumnType("bigint")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<DateTime>("CreationDate")
                        .HasColumnName("creation_date")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("Location")
                        .IsRequired()
                        .HasColumnName("location")
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnName("name")
                        .HasColumnType("text");

                    b.Property<int>("PvpType")
                        .HasColumnName("pvp_type")
                        .HasColumnType("integer");

                    b.Property<DateTime>("ScrapyData")
                        .HasColumnName("scrapy_data")
                        .HasColumnType("timestamp without time zone");

                    b.HasKey("Id");

                    b.ToTable("world");
                });

            modelBuilder.Entity("TibiaApi.Database.DeathPlayer", b =>
                {
                    b.HasOne("TibiaApi.Database.Player", "Player")
                        .WithMany("Deaths")
                        .HasForeignKey("PlayerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("TibiaApi.Database.KillStat", b =>
                {
                    b.HasOne("TibiaApi.Database.MonsterKillStats", "MonsterKillStat")
                        .WithMany("KillStats")
                        .HasForeignKey("MonsterKillStatId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TibiaApi.Database.World", "World")
                        .WithMany()
                        .HasForeignKey("WorldId");
                });

            modelBuilder.Entity("TibiaApi.Database.MonsterKillStats", b =>
                {
                    b.HasOne("TibiaApi.Database.World", "World")
                        .WithMany()
                        .HasForeignKey("WorldId");
                });

            modelBuilder.Entity("TibiaApi.Database.Player", b =>
                {
                    b.HasOne("TibiaApi.Database.World", "World")
                        .WithMany("Players")
                        .HasForeignKey("WorldId");
                });

            modelBuilder.Entity("TibiaApi.Database.PlayerHistory", b =>
                {
                    b.HasOne("TibiaApi.Database.Player", "Player")
                        .WithMany("History")
                        .HasForeignKey("PlayerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TibiaApi.Database.World", "World")
                        .WithMany()
                        .HasForeignKey("WorldId");
                });

            modelBuilder.Entity("TibiaApi.Database.Stats", b =>
                {
                    b.HasOne("TibiaApi.Database.World", "World")
                        .WithMany("Statistics")
                        .HasForeignKey("WorldId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
